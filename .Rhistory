where a.CHR = b.seqnames and
a.BP BETWEEN b.start AND b.end")
res
i=2
regionCurrent <- regionsCHR[i,]
regionCurrent
res <- sqldf("select a.*
from LNCAP a, regionCurrent b
where a.CHR = b.seqnames and
a.BP BETWEEN b.start AND b.end")
res
for(chr in c(1:2)){
#chr=10
myCHR <- paste0("chr",ifelse(chr==23,"X",as.character(chr)))
#select a region per chr
regionsCHR <- regionsBED %>% filter(seqnames==myCHR)
#loop through regions, subset and output assoc files
for(i in 1:nrow(regionsCHR)){
#i=2
regionCurrent <- regionsCHR[i,]
#subset overlap start end region
res <- sqldf("select a.*
from LNCAP a, regionCurrent b
where a.CHR = b.seqnames and
a.BP BETWEEN b.start AND b.end")
#output to a file
FileRegion <- paste0("Data/LocusExplorerFiles/chr",
regionCurrent$seqnames,"_",
regionCurrent$start,"_",
regionCurrent$end,"_LNCAP.txt")
write.table(res, FileRegion, row.names = FALSE,quote = FALSE,sep="\t")
} # END for loop i
} # END for loop chr
for(chr in c(1:2)){
#chr=10
myCHR <- paste0("chr",ifelse(chr==23,"X",as.character(chr)))
#select a region per chr
regionsCHR <- regionsBED %>% filter(seqnames==myCHR)
#loop through regions, subset and output assoc files
for(i in 1:nrow(regionsCHR)){
#i=2
regionCurrent <- regionsCHR[i,]
#subset overlap start end region
res <- sqldf("select a.*
from LNCAP a, regionCurrent b
where a.CHR = b.seqnames and
a.BP BETWEEN b.start AND b.end")
#output to a file
FileRegion <- paste0("Data/LocusExplorerFiles/",
regionCurrent$seqnames,"_",
regionCurrent$start,"_",
regionCurrent$end,"_LNCAP.txt")
write.table(res, FileRegion, row.names = FALSE,quote = FALSE,sep="\t")
} # END for loop i
} # END for loop chr
shiny::runApp('N:/Translational Cancer Genetics Team/04 Zsofia/20 Fine Map/LocusExplorer/LocusExplorer')
chr=10
myCHR <- paste0("chr",ifelse(chr==23,"X",as.character(chr)))
regionsCHR <- regionsBED %>% filter(seqnames==myCHR)
eQTL <- read.csv("Data/ProstateData/eQTL/PRAD.cis(2).csv")
getwd()
eQTL <- read.csv("Data/eQTL/PRAD.cis(2).csv")
eQTL
head(eQTL)
eQTL <- eQTL %>%
filter(chrom=="chr2" &
txStart >= ROI[1] &
txEnd <= ROI[2]) %>%
transmute(CHR=Chrom,
START=txStart,
END=txEnd,
DIRECTION=ifelse(t.stat < 0, -1, 1)) %>%
unique
eQTL <- eQTL %>%
transmute(CHR=Chrom,
START=txStart,
END=txEnd,
DIRECTION=ifelse(t.stat < 0, -1, 1)) %>%
unique
eQTL
eQTL <- read.csv("Data/eQTL/PRAD.cis(2).csv")
eQTL <- eQTL %>%
transmute(CHR=Chrom,
START=as.numeric(round(txStart)),
END=txEnd,
DIRECTION=ifelse(t.stat < 0, -1, 1)) %>%
unique
eQTL
chr=10
myCHR <- paste0("chr",ifelse(chr==23,"X",as.character(chr)))
regionsCHR <- regionsBED %>% filter(seqnames==myCHR)
regionsCHR
i=2
regionCurrent <- regionsCHR[i,]
regionCurrent
head(eQTL)
res <- sqldf("select a.*
from eQTL a, regionCurrent b
where a.CHR = b.seqnames and
a.START >= b.start AND
a.END <= b.end")
res
for(chr in c(1:2)){
#chr=10
myCHR <- paste0("chr",ifelse(chr==23,"X",as.character(chr)))
#select a region per chr
regionsCHR <- regionsBED %>% filter(seqnames==myCHR)
#loop through regions, subset and output assoc files
for(i in 1:nrow(regionsCHR)){
#i=2
regionCurrent <- regionsCHR[i,]
#subset overlap start end region
res <- sqldf("select a.*
from eQTL a, regionCurrent b
where a.CHR = b.seqnames and
a.START >= b.start AND
a.END <= b.end")
#output to a file
FileRegion <- paste0("Data/LocusExplorerFiles/",
regionCurrent$seqnames,"_",
regionCurrent$start,"_",
regionCurrent$end,"_EQTL.txt")
write.table(res, FileRegion, row.names = FALSE,quote = FALSE,sep="\t")
} # END for loop i
} # END for loop chr
shiny::runApp('N:/Translational Cancer Genetics Team/04 Zsofia/20 Fine Map/LocusExplorer/LocusExplorer')
res
chr=1
myCHR <- paste0("chr",ifelse(chr==23,"X",as.character(chr)))
regionsCHR <- regionsBED %>% filter(seqnames==myCHR)
regionsCHR
i=1
regionCurrent <- regionsCHR[i,]
res <- sqldf("select a.*
from eQTL a, regionCurrent b
where a.CHR = b.seqnames and
a.START >= b.start AND
a.END <= b.end")
res
for(chr in c(10:12)){
#chr=1
myCHR <- paste0("chr",ifelse(chr==23,"X",as.character(chr)))
#select a region per chr
regionsCHR <- regionsBED %>% filter(seqnames==myCHR)
#loop through regions, subset and output assoc files
for(i in 1:nrow(regionsCHR)){
#i=1
regionCurrent <- regionsCHR[i,]
#subset overlap start end region
res <- sqldf("select a.*
from eQTL a, regionCurrent b
where a.CHR = b.seqnames and
a.START >= b.start AND
a.END <= b.end")
#output to a file
FileRegion <- paste0("Data/LocusExplorerFiles/x_",
regionCurrent$seqnames,"_",
regionCurrent$start,"_",
regionCurrent$end,"_EQTL.txt")
write.table(res, FileRegion, row.names = FALSE,quote = FALSE,sep="\t")
} # END for loop i
} # END for loop chr
for(chr in c(1:23)){
#chr=10
myCHR <- paste0("chr",ifelse(chr==23,"X",as.character(chr)))
#read Meta assoc files
assoc <- fread(paste0("Data/meta.gwas.icogs.finemapping.1.combined/chr",chr,
".meta.gwas.icogs.finemapping.1.combined.txt"))
#convert to LE format - CHR,SNP,BP,P
assoc <- assoc %>%
separate(MarkerName,c("chr1","BP"),":",extra = "drop",convert=TRUE,remove=FALSE) %>%
transmute(CHR=myCHR,
SNP=ifelse(snp_name=="-",MarkerName,snp_name),
BP=BP,
P=`P-value`)
#select a region per chr
regionsCHR <- regionsBED %>% filter(seqnames==myCHR)
#loop through regions, subset and output assoc files
for(i in 1:nrow(regionsCHR)){
#i=1
regionCurrent <- regionsCHR[i,]
#subset overlap start end region
res <- sqldf("select a.*
from assoc a, regionCurrent b
where a.BP BETWEEN b.start AND b.end")
res$TYPED <- ifelse(res$SNP %in% iCOGSbim[ iCOGSbim$CHR==chr, "SNP"],2,1)
res$TYPED <- ifelse(res$BP %in% iCOGSbim[ iCOGSbim$CHR==chr, "BP"],2,1)
#output to a file
FileRegion <- paste0("Data/LocusExplorerFiles/",
regionCurrent$seqnames,"_",
regionCurrent$start,"_",
regionCurrent$end,"_assoc.txt")
write.table(res, FileRegion, row.names = FALSE,quote = FALSE,sep="\t")
} # END for loop i
} # END for loop chr
for(chr in c(1:23)){
#chr=10
myCHR <- paste0("chr",ifelse(chr==23,"X",as.character(chr)))
#select a region per chr
regionsCHR <- regionsBED %>% filter(seqnames==myCHR)
#loop through regions, subset and output assoc files
for(i in 1:nrow(regionsCHR)){
#i=1
regionCurrent <-
regionsCHR[i,] %>%
mutate(seqnames=gsub("chr","",seqnames),
seqnames=as.numeric(ifelse(seqnames=="X",23,seqnames)))
#subset overlap start end region
res <- sqldf("select a.*
from LD_1KG a, regionCurrent b
where a.CHR_A = b.seqnames and
a.BP_B BETWEEN b.start AND b.end")
#output to a file
FileRegion <- paste0("Data/LocusExplorerFiles/chr",
regionCurrent$seqnames,"_",
regionCurrent$start,"_",
regionCurrent$end,"_LD.txt")
write.table(res, FileRegion, row.names = FALSE,quote = FALSE,sep="\t")
} # END for loop i
} # END for loop chr
for(chr in c(1:23)){
#chr=10
myCHR <- paste0("chr",ifelse(chr==23,"X",as.character(chr)))
#select a region per chr
regionsCHR <- regionsBED %>% filter(seqnames==myCHR)
#loop through regions, subset and output assoc files
for(i in 1:nrow(regionsCHR)){
#i=2
regionCurrent <- regionsCHR[i,]
#subset overlap start end region
res <- sqldf("select a.*
from LNCAP a, regionCurrent b
where a.CHR = b.seqnames and
a.BP BETWEEN b.start AND b.end")
#output to a file
FileRegion <- paste0("Data/LocusExplorerFiles/",
regionCurrent$seqnames,"_",
regionCurrent$start,"_",
regionCurrent$end,"_LNCAP.txt")
write.table(res, FileRegion, row.names = FALSE,quote = FALSE,sep="\t")
} # END for loop i
} # END for loop chr
for(chr in c(1:23)){
#chr=1
myCHR <- paste0("chr",ifelse(chr==23,"X",as.character(chr)))
#select a region per chr
regionsCHR <- regionsBED %>% filter(seqnames==myCHR)
#loop through regions, subset and output assoc files
for(i in 1:nrow(regionsCHR)){
#i=1
regionCurrent <- regionsCHR[i,]
#subset overlap start end region
res <- sqldf("select a.*
from eQTL a, regionCurrent b
where a.CHR = b.seqnames and
a.START >= b.start AND
a.END <= b.end")
#output to a file
FileRegion <- paste0("Data/LocusExplorerFiles/x_",
regionCurrent$seqnames,"_",
regionCurrent$start,"_",
regionCurrent$end,"_EQTL.txt")
write.table(res, FileRegion, row.names = FALSE,quote = FALSE,sep="\t")
} # END for loop i
} # END for loop chr
for(chr in c(1:23)){
#chr=1
myCHR <- paste0("chr",ifelse(chr==23,"X",as.character(chr)))
#select a region per chr
regionsCHR <- regionsBED %>% filter(seqnames==myCHR)
#loop through regions, subset and output assoc files
for(i in 1:nrow(regionsCHR)){
#i=1
regionCurrent <- regionsCHR[i,]
#subset overlap start end region
res <- sqldf("select a.*
from eQTL a, regionCurrent b
where a.CHR = b.seqnames and
a.START >= b.start AND
a.END <= b.end")
#output to a file
FileRegion <- paste0("Data/LocusExplorerFiles/",
regionCurrent$seqnames,"_",
regionCurrent$start,"_",
regionCurrent$end,"_EQTL.txt")
write.table(res, FileRegion, row.names = FALSE,quote = FALSE,sep="\t")
} # END for loop i
} # END for loop chr
View(ProstateHits)
View(regionsBED)
write.table(regionsBED,"regions.BED")
write.table(regionsBED %>%
transmute(CHR=seqnames,
START=start,
END=end),"regions.csv")
write.csv(regionsBED %>%
transmute(CHR=ifelse(seqnames==23,"chrX",paste0("chr",seqnames)),
START=start,
END=end),"regions.csv")
regionsBED
write.csv(regionsBED %>%
transmute(CHR=seqnames,
START=start,
END=end),"regions.csv",row.names = FALSE,quote = FALSE)
write.csv(
regionsBED %>%
mutate(chrN=gsub("chr","",seqnames),
chrN=ifelse(chrN=="X",23,as.numeric(chrN))) %>%
arrange(chrN,start) %>%
transmute(CHR=seqnames,
START=start,
END=end),
"regions.csv",row.names = FALSE,quote = FALSE)
regionsBED %>%
mutate(chrN=gsub("chr","",seqnames),
chrN=ifelse(chrN=="X",23,as.numeric(chrN)))
c(1:14,16:22)
paste0("chr",c(1:14,16:22),"X")
paste0("chr",c(1:14,16:22,"X"))
shiny::runApp('N:/Translational Cancer Genetics Team/04 Zsofia/20 Fine Map/LocusExplorer/LocusExplorer')
shiny::runApp('N:/Translational Cancer Genetics Team/04 Zsofia/20 Fine Map/LocusExplorer/LocusExplorer')
shiny::runApp('N:/Translational Cancer Genetics Team/04 Zsofia/20 Fine Map/LocusExplorer/LocusExplorer')
shiny::runApp('N:/Translational Cancer Genetics Team/04 Zsofia/20 Fine Map/LocusExplorer/LocusExplorer')
shiny::runApp('N:/Translational Cancer Genetics Team/04 Zsofia/20 Fine Map/LocusExplorer/LocusExplorer')
regions
fread(paste0("Data/ProstateData/LE/","chr1_10456000_10656000","_LD.txt"),
header=TRUE, data.table=FALSE)
paste0("Data/ProstateData/LE/","chr1_10456000_10656000","_LD.txt")
setwd("N:/Translational Cancer Genetics Team/04 Zsofia/20 Fine Map/LocusExplorer/LocusExplorer")
fread(paste0("Data/ProstateData/LE/","chr1_10456000_10656000","_LD.txt"),
header=TRUE, data.table=FALSE)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
pdf
svg
pdf(file = "temp.pdf",width = 5,height = 6,units="in")
pdf(file = "temp.pdf",width = 5,height = 6, useDingbats = FALSE)
dev.off()
svg(file = "temp.svg",width = 5,height = 6, useDingbats = FALSE)
dev.off()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
seq(50, 600, 50)
shiny::runApp()
seq(100, 600, 50)
list("A"=1)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
nrow(x)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
